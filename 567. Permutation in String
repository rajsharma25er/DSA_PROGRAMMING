567. Permutation in String
Solved
Medium
Topics
Companies
Hint
Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise.

In other words, return true if one of s1's permutations is the substring of s2.

 

Example 1:

Input: s1 = "ab", s2 = "eidbaooo"
Output: true
Explanation: s2 contains one permutation of s1 ("ba").
Example 2:

Input: s1 = "ab", s2 = "eidboaoo"
Output: false
 

Constraints:

1 <= s1.length, s2.length <= 104
s1 and s2 consist of lowercase English letters.

################  code #####################
import java.util.HashMap;

class Solution {
    public boolean checkInclusion(String s1, String s2) {
        if (s1.length() > s2.length()) return false;

        HashMap<Character, Integer> mp = new HashMap<>();

        for (char c : s1.toCharArray()) {
            mp.put(c, mp.getOrDefault(c, 0) + 1);
        }

        int i = 0, j = 0;
        int tcount = s1.length();

        while (j < s2.length()) {
            char endChar = s2.charAt(j);
            
            if (mp.containsKey(endChar)) {
                if (mp.get(endChar) > 0) {
                    tcount--;
                }
                mp.put(endChar, mp.get(endChar) - 1);
            }

            if (j - i + 1 == s1.length()) {
                if (tcount == 0) return true;

                char startChar = s2.charAt(i);
                
                if (mp.containsKey(startChar)) {
                    mp.put(startChar, mp.get(startChar) + 1);
                    if (mp.get(startChar) > 0) {
                        tcount++;
                    }
                }
                i++;
            }

            j++;
        }

        return false;
    }
}
